[
  {
    "objectID": "posts/2022-12-01-armyvet/index.html",
    "href": "posts/2022-12-01-armyvet/index.html",
    "title": "U.S. Veteran Statistics",
    "section": "",
    "text": "https://www.arlingtoncemetery.mil/Developers/Burial-Record-Public-Service-Methods\nhttps://wspublic.eiss.army.mil/v1/IssRetrieveServices.svc/search?q=DOD=::2022,DOB=::1981&sortColumn=PrimaryLastName,PrimaryFirstName&sortOrder=asc\n\n\n\nReusehttps://creativecommons.org/licenses/by-nc/4.0/CitationBibTeX citation:@online{bacou2022,\n  author = {Melanie BACOU},\n  title = {U.S. {Veteran} {Statistics}},\n  date = {2022-12-01},\n  url = {https://mbacou.github.io/mb-labs/posts/2022-12-01-armyvet},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nMelanie BACOU. 2022. “U.S. Veteran Statistics.” December 1,\n2022. https://mbacou.github.io/mb-labs/posts/2022-12-01-armyvet."
  },
  {
    "objectID": "posts/2021-01-16-rfmerge/index.html",
    "href": "posts/2021-01-16-rfmerge/index.html",
    "title": "Merge Ground and Satellite Observations with RFMerge",
    "section": "",
    "text": "We want to recalibrate ERA5-LAND hourly temperatures to CIMIS ground network observations to address ERA5-LAND model biases noted in California:\n\nBuild CIMIS time-series across OLAM portfolio extent\n\nBuild DEM covariate using ERA5-LAND extent and spatial resolution\n\nUse RFMerge procedure1 to produce calibrated hourly raster stacks over the past 10 years (limit calibration from Jan-01 to Apr-30 every year)\n\n1 See Baez-Villanueva, O. M., Zambrano-Bigiarini, M., Diego, J., Osorio, G.-, & Mcnamara, I. (2020). Tutorial for merging satellite-based precipitation datasets with ground observations using RFmerge.This work was initially performed for WorldCover PBC and OLAM US, redacted here to omit confidential details.\n\n\ncode\n\nlibrary(rmarkdown)\nlibrary(lattice)\nlibrary(raster)\n## Loading required package: sp\nlibrary(tmap)\nlibrary(scales)\nlibrary(data.table)\n## \n## Attaching package: 'data.table'\n## The following object is masked from 'package:raster':\n## \n##     shift\nlibrary(zoo)\n## \n## Attaching package: 'zoo'\n## The following objects are masked from 'package:base':\n## \n##     as.Date, as.Date.numeric\nlibrary(cimir)\n## Using existing App Key from \"CIMIS_APPKEY\" environment variable.\nlibrary(sf)\n## Linking to GEOS 3.10.2, GDAL 3.4.3, PROJ 8.2.0; sf_use_s2() is TRUE\n## WARNING: different compile-time and runtime versions for GEOS found:\n## Linked against: 3.10.2-CAPI-1.16.0 compiled against: 3.10.1-CAPI-1.16.0\n## It is probably a good idea to reinstall sf, and maybe rgeos and rgdal too\nlibrary(RFmerge)\n## (C) 2019 M. Zambrano-Bigiarini and Oscar M. Baez-Villanueva (GPL >=3 license)\n## Type 'citation('RFmerge')' to see how to cite this package\n\ndir <- \".\"\nload(file.path(dir, \"./tmp/2020-burn_olam_usa_06.RData\"))\n\n# Default color palette\npal <- readRDS(\"../../_assets/pal_iwmi.rds\")\n\nmy.settings <- list(\n  superpose.polygon=list(col=alpha(pal, .6), border=\"transparent\"),\n  strip.background=list(col=pal[\"light\"])\n)\n#trellis.par.set(my.settings) \n\n\nDefine zone of interest and load covariate layers.\n\n\ncode\n# Clear workspace, keep portfolio details\nload(file.path(dir, \"./tmp/2020-burn_olam_usa_04.RData\"))\nrm(list=setdiff(ls(), c(\"dir\", \"pts.dt\")))\n\npts <- SpatialPointsDataFrame(pts.dt[, .(X,Y)], data.frame(pts.dt), \n  proj4string=CRS(\"+init=epsg:4326\"))\n\nusa <- getData(\"GADM\", country=\"USA\", level=2)\n# Limit to OLAM counties\nusa <- usa[usa$NAME_2 %in% pts.dt[, unique(adm2_nm)],]\nzoi <- extent(usa)\nzoi\n# class      : Extent \n# xmin       : -121.4844 \n# xmax       : -117.6166 \n# ymin       : 34.7902 \n# ymax       : 38.07786 \n\n# Catalog hourly ERA5 tmean\nf <- list.files(file.path(dir, \"../maps/ERA5LAND/2m_temperature/hourly/usa.ca\"), \".nc\", \n  recursive=T, full.names=T)\n\n# Verify data archive\nn <- sapply(f, function(x) nlayers(brick(x, quick=T)))\nunique(n)\n# [1] 23 24  1 22\nbad <- f[names(n[n<24])]\nn <- sapply(f[bad], function(x) nlayers(brick(x, quick=T)))\ndata.table(\n  fname = basename(f[bad]),\n  nlayers = n)\n#                  fname nlayers\n# 1: daily_1981-01-01.nc      23\n# 2: daily_2020-08-01.nc       1\n# 3: daily_2020-10-01.nc      22\n# 4: daily_2020-10-02.nc      22\n# 5: daily_2020-10-03.nc      22\n# 6: daily_2020-10-15.nc      22\n\nN <- lapply(f[1:10], function(x) {\n  s = brick(x, quick=T)\n  s = setMinMax(s)\n  s = minValue(s) == maxValue(s)\n  which(s)\n})\nbad <- N[sapply(N, `!=`, integer(0))]\n\n\nObtain long-term weather station records from CIMIS API.\n\n\ncode\nset_key(\"27ab5faa-abbb-475e-8af1-f380862bca61\")\nitem <- \"hly-air-tmp\"\n\n# Keep all CIMIS stations inside ZOI\nobs.gis <- cimis_station()\nsetDT(obs.gis)\nobs.gis[1:3, .(ConnectDate, DisconnectDate, HmsLatitude, HmsLongitude)]\n#    ConnectDate DisconnectDate           HmsLatitude              HmsLongitude\n# 1:    6/7/1982      9/25/1988 36º48'52N / 36.814444 -119º43'54W / -119.731670\n# 2:    6/7/1982      9/25/1988 36º48'52N / 36.814444 -119º43'54W / -119.731670\n# 3:    6/7/1982      9/25/1988 36º48'52N / 36.814444 -119º43'54W / -119.731670\n\nobs.gis[, `:=`(\n  # HMS Lat/Lon to degree\n  X = unlist(tstrsplit(HmsLongitude, \" / \", fixed=T, keep=2L)),\n  Y = unlist(tstrsplit(HmsLatitude, \" / \", fixed=T, keep=2L))\n)][, `:=`(\n  X = as.numeric(X),\n  Y = as.numeric(Y)\n)][, `:=`(\n  # Cast dates\n  date_start = as.Date(ConnectDate, format=\"%m/%d/%Y\"),\n  date_end = as.Date(DisconnectDate, format=\"%m/%d/%Y\")\n)]\n\nobs.gis[1:3, .(HmsLongitude, HmsLatitude, X, Y, date_start, date_end)]\nobs.gis <- obs.gis[, .(StationNbr, Name, X, Y, date_start, date_end, IsActive)]\n\n# There are duplicated stations (?)\nobs.gis <- unique(obs.gis, by=c(\"StationNbr\", \"X\", \"Y\", \"date_start\"))\nanyDuplicated(obs.gis, by=\"StationNbr\")\n\n# Date ranges that are available\nobs.gis[, .(range(date_start), range(date_end))]\n#            V1         V2\n# 1: 1982-05-30 1985-07-23\n# 2: 2020-10-28 2050-12-31\n\nobs.gis <- SpatialPointsDataFrame(obs.gis[, .(X, Y)], data.frame(obs.gis),\n  proj4string=CRS(\"+init=epsg:4326\"))\nobs.gis <- crop(obs.gis, zoi)\n\n# Plot maps\nplot(crop(raster(r, layer=2), zoi), main=basename(f[2]))\nplot(pts, add=T, pch=\"*\")\nplot(obs.gis, add=T, col=c(\"red\", \"green\")[1+(obs.gis$IsActive==\"True\")], pch=\"x\")\n\nobs.lst <- obs.gis@data[, \"StationNbr\"]\nlength(obs.lst)\n\nobs.gis <- setDT(obs.gis@data)\n\n# API limit at 1,750 records so batch it\ndrange <- c(\"2017-01-01\", \"2017-04-30\")\nobs <- lapply(obs.lst, function(x) {\n  date_start = obs.gis[StationNbr==x, date_start]\n  date_end = obs.gis[StationNbr==x, date_end]\n  date_start = pmax(as.Date(drange[1]), date_start)\n  date_end = pmin(as.Date(drange[2]), date_end)\n  res = if(date_end >= date_start) {\n    s = seq.Date(date_start, date_end, by=\"10 days\")\n    lapply(s, function(y) {\n      t = try(cimis_data(\n        targets=as.integer(x), items=item, measure.unit=\"M\", start.date=y, end.date=y+10-1))\n      t = if(class(t)[1]==\"try-error\") NULL else setDT(t)\n      return(t)\n    })\n  } else NULL\n  return(res)\n})\n\nobs <- lapply(obs, rbindlist)\nnames(obs) <- obs.lst\nobs <- rbindlist(obs, fill=T, idcol=\"StationNbr\")\n\n# Clean up\nobs[, `:=`(\n  Name = NULL,\n  Type = NULL,\n  Owner = NULL,\n  Standard = NULL,\n  ZipCodes = NULL,\n  Item = NULL,\n  Qc = NULL,\n  Unit = NULL\n)]\n\n# Verify\nobs[StationNbr != Station, .N]\nobs[, .N, by=Scope]\nobs[, `:=`(\n  Station = NULL,\n  Scope = NULL\n)]\n\n# Tally\nobs[, .(.N, min(Date), max(Date)), keyby=.(StationNbr)]\n# => \"232\" station missing records 2160/2880\nobs[, .(.N, sum(is.na(Value)), min(Date), max(Date)), keyby=.(StationNbr)]\n24*(as.Date(drange[2])-as.Date(drange[1])+1)\n\n# Nearest to OLAM3 portfolio\nids <- c(168, 206, 145, 188, 148)\nfwrite(obs[StationNbr %in% as.character(ids)], \"./out/CIMIA_OLAM3_2017.csv\")\n\n\nPrepare DEM at ERA5 layers.\n\n\ncode\n# Prepare DEM at ERA5 extent and resolution\ndem1 <- getData(\"SRTM\", lon=zoi[2], lat=zoi[3])\ndem2 <- getData(\"SRTM\", lon=zoi[1], lat=zoi[4])\ndem3 <- getData(\"SRTM\", lon=zoi[2], lat=zoi[4])\ndem4 <- getData(\"SRTM\", lon=zoi[1], lat=zoi[3])\ndem <- merge(dem1, dem2, dem3, dem4, ext=zoi)\n\n\nFormat station time-series to Zoo wide arrays.\n\n\ncode\n# Prep station time-series, require ZOO wide format\nobs[, Time := paste(as.character(Date), Hour)\n][, c(\"Date\", \"Time\") := IDateTime(\n  as.POSIXlt(Time, format=\"%Y-%m-%d %H%M\", tz=\"America/Los_Angeles\"))]\nView(obs[c(1:30, .N)])\n# 2017-01-01 2300 => 2017-01-01 23:00\n# 2017-01-01 2400 => 2017-01-02 00:00\n# => OK\nsetorder(obs, StationNbr, Date, Time)\nobs.ts <- dcast(obs, Date+Time~StationNbr, value.var=\"Value\")\nobs.ts <- zoo(\n  obs.ts[, .SD, .SDcols=-c(1:2)], \n  order.by=obs.ts[, as.POSIXlt(paste(Date, Time, tz=\"America/Los_Angeles\"))]\n)\n\n\nImplement Random Forest merge algorithm.\n\n\ncode\n# Cut the series at Jan-Apr 2017 (time constraint)\ndrange <- c(\"2017-01-01\", \"2017-04-30\")\nx1 <- which(f %like% drange[1])\nx2 <- which(f %like% drange[2])\nf <- f[x1:x2]\nf[1]\n\n# Limit ERA5 covariate\nera <- brick(as.list(f))\nera <- crop(era, zoi, filename=\"./out/ERA5_2m_temperature_2017.grd\", overwrite=T)\nera <- brick(\"./out/ERA5_2m_temperature_2017.grd\")\n\n# Align DEM to ERA5\ndem <- resample(dem, era[[1]], filename=\"./out/SRTM_ERA5.grd\")\nidentical(res(dem), res(era))\nidentical(extent(dem), extent(era))\nidentical(nlayers(era), nrow(obs.ts))\n\n# ZOI require SF\nstations <- sf::st_as_sf(obs.gis, coords=c(\"X\", \"Y\"), crs=4326)\nzoi <- st_as_sfc(st_bbox(usa))\nzoi <- st_sf(data.frame(ID=1), geom=zoi)\n\n# Verify CRS\nidentical(st_crs(zoi), st_crs(era))\nidentical(st_crs(r), st_crs(era))\n\n# Reproject all to NAD_1983_California_Teale_Albers\nNAD83 <- CRS(\"+init=epsg:3310\")\nera <- projectRaster(from=era, crs=NAD83)\ndem <- projectRaster(from=dem, crs=NAD83)\nstations <- st_transform(stations, crs=3310)\npts <- spTransform(pts, CRS(\"+init=epsg:3310\"))\nzoi <- st_transform(zoi, crs=3310)\nobs.gis[, `:=`(\n  Lon = st_coordinates(stations)[, \"X\"],\n  Lat = st_coordinates(stations)[, \"Y\"]\n)]\n\n# Covariates\ncovariates <- list(era=era, dem=dem)\nobs.meta <- obs.gis[StationNbr %in% names(obs.ts), .(StationNbr, Lon, Lat)]\n\n# RFmerge\ndir.create(\"./out/2017_RFmerge_proj\")\nmc.cores <- parallel::detectCores()-2\n\nrfmep <- RFmerge(\n  x = obs.ts, \n  metadata = obs.meta, \n  cov = covariates, \n  id=\"StationNbr\", lat=\"Lat\", lon=\"Lon\", ED=TRUE,\n  mask=zoi, training=0.9, write2disk=TRUE, drty.out=\"./out/2017_RFmerge_proj\",\n  parallel=\"parallel\", par.nnodes=mc.cores)\n\nnames(rfmep)[c(1:2, nlayers(rfmep))]\n# [1] \"X2017.01.01.01.00.00\" \"X2017.01.01.02.00.00\" \"X2017.05.01.00.00.00\"\n\ncrs(rfmep)\n\n\nExtract recalibrated time-series across almond production sites.\n\n\ncode\n# Extract recalibrated time-series across production sites\nremoveTmpFiles(h=0)\ndt.imp <- extract(rfmep, pts)\ndt.imp = as.data.table(dt.imp, keep.rownames=TRUE)\ndt.imp[, loc_id := pts$loc_id]\ndt.imp = melt(dt.imp, id.vars=\"loc_id\", variable.name=\"time\", value.name=\"value\", variable.factor=F)\ndt.imp[, time := as.POSIXct(time, format=\"X%Y.%m.%d.%H.%M.%OS\", tz=\"America/Los_Angeles\")]\n\ndt.imp[, range(time)]\ndt.imp[, `:=`(\n  # Convert to IDate\n  date = as.IDate(time),\n  time = as.ITime(time)\n)]\n\n# Re-extract ERA5-LAND over period to double-check\nr <- brick(f[1], quick=T)\npts <- spTransform(pts, crs(r))\ndt.era <- lapply(f, function(x) {\n  r = brick(x, quick=T)\n  y = extract(r, pts)\n  y = as.data.table(y, keep.rownames=TRUE)\n  y[, loc_id := pts$loc_id]\n  y = melt(y, id.vars=\"loc_id\", variable.name=\"time\", value.name=\"value\", variable.factor=F)\n  y[, time := as.POSIXct(time, format=\"X%Y.%m.%d.%H.%M.%OS\", tz=\"UTC\")]\n})\ndt.era <- rbindlist(dt.era)\ndt.era[, range(time)]\ndt.era[, `:=`(\n  # Convert to IDate\n  date = as.IDate(time),\n  time = as.ITime(time)\n)]\n\n# Impute ERA5 hourly time-series with output of RFmerge\ndt <- readRDS(file.path(dir, \"./tmp/2020-tmean-hourly_olam_ca_almd.rds\"))\ndt.imp[dt, on=.(loc_id, date, time), era := i.value\n][dt.era, on=.(loc_id, date, time), era_valid := i.value]\n\n# Save\ndt <- dt[!dt.imp, on=.(loc_id, date, time)]\ndt <- rbind(dt, dt.imp[, .SD, .SDcols=names(dt)])\nsetorder(dt, loc_id, date, time)\nsaveRDS(dt, file.path(dir, \"./tmp/2020-tmean-hourly_olam_ca_almd_imputed.rds\"))\n\n\n\n\ncode\nrm(x, i, j, t, tmp, dem1, dem2, dem3, dem4, n, x1, x2, dt, dtc)\nsave.image(file.path(dir, \"./tmp/2020-burn_olam_usa_06.RData\"))\n\n\nValidate ZOI, DEM, and ERA5 covariates.\n\n\ncode\nera <- brick(\"./out/ERA5_2m_temperature_2017.grd\")\nera <- raster(era, 1)\n\ntmap_mode(\"view\")\n## tmap mode set to interactive viewing\ntm_shape(era) + \n  tm_raster(title=\"ERA5-LAND<br/>Temperature<br/>2020-02-01 00:00<br/>°C\", alpha=.6) +\n  tm_shape(stations) + tm_dots(\"black\", title=\"CIMIS WS\") + \n  tm_shape(pts) + tm_dots(\"blue\", title=\"OLAM Site\") + \n  tm_shape(pts[pts$loc_id %in% c(25, 82, 83), ]) + \n  tm_dots(\"red\")\n## Variable(s) \"NA\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\nDEM at ERA5 extent and resolution.\n\n\ncode\npts <- spTransform(pts, CRS(\"+init=epsg:3310\"))\n\nplot(dem, main=\"SRTM 90m (meter)\",\n  col=terrain.colors(80, alpha=1))\nplot(zoi, add=T, lty=2, col=NA)\nplot(pts, add=T, pch=16)\nplot(stations, add=T, col=pal[c(\"red\", \"green\")][1+(obs.gis$IsActive==\"True\")], pch=\"x\")\n## Warning in plot.sf(stations, add = T, col = pal[c(\"red\", \"green\")][1 +\n## (obs.gis$IsActive == : ignoring all but the first attribute\nlegend(\"topright\", legend=c(\"Active station\", \"Stale station\", \"Production site\"),\n  col=pal[c(\"red\", \"green\", \"black\")], pch=c(\"x\", \"x\", \"o\"), cex=.8)\n\n\n\n\n\nCIMIS station observations between Jan-Apr 2017.\n\n\ncode\nobs[, .(\n  `Obs.` = comma(.N), \n  `NA` = percent(sum(is.na(Value))/.N), \n  `Min.` = min(Value, na.rm=T), \n  `Max.` = max(Value, na.rm=T),\n  `Date Range` = paste(range(Date, na.rm=T), collapse=\" - \")\n), keyby=.(StationNbr)] %>%\n  paged_table()\n\n\n\n\n\n\nCIMIS Station Observations, Jan-Apr 2017\n\n\n\n\ncode\n\nplot(obs.ts[,1], col=alpha(pal[1], .7),\n  main=paste(\"Station\", names(obs.ts)[1]), xlab=\"Hourly Temp. °C\", ylab=NA)\ngrid()\n\n\n\n\n\ncode\n\nplot(obs.ts[,20], col=alpha(pal[1], .7),\n  main=paste(\"Station\", names(obs.ts)[20]), xlab=\"Hourly Temp. °C\", ylab=NA)\ngrid()\n\n\n\n\n\n\n\ncode\nhistogram(~Value|StationNbr, data=obs, \n  col=alpha(pal[1], .6), border=pal[\"black\"],\n  par.settings=my.settings,\n  layout=c(2,6), xlab=\"Jan-Apr 2017 Hourly Temp. °C\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncode\nplot(rfmep[[1]], main=\"RF-MEP Temperatures\", xlab=names(rfmep)[1],\n  col=terrain.colors(80, alpha=1))\nplot(pts, pch=16, col=pal[\"black\"], add=T)\nplot(stations[stations$StationNbr %in% names(obs.ts),], pch=\"x\", col=pal[\"black\"], add=T)\n## Warning in plot.sf(stations[stations$StationNbr %in% names(obs.ts), ], pch = \"x\", :\n## ignoring all but the first attribute\nlegend(\"topright\", legend=c(\"Active station\", \"Production site\"), pch=c(\"x\", \"o\"), cex=.8)\n\n\n\n\n\n\n\ncode\nplot(era[[1]], main=\"ERA5-LAND Temperatures\", xlab=names(era)[1],\n  col=terrain.colors(80, alpha=1))\nplot(pts, pch=16, col=pal[\"black\"], add=T)\nplot(stations[stations$StationNbr %in% names(obs.ts),], pch=\"x\", col=pal[\"black\"], add=T)\n## Warning in plot.sf(stations[stations$StationNbr %in% names(obs.ts), ], pch = \"x\", :\n## ignoring all but the first attribute\nlegend(\"topright\", legend=c(\"Active station\", \"Production site\"), pch=c(\"x\", \"o\"), cex=.8)\n\n\n\n\n\nHourly time-series from CIMIS ground stations:\n\n\ncode\n\nwireframe(Value~as.numeric(Date)*Time, data=obs, \n  xlab=\"Date\", ylab=\"Hour\", sub=\"CIMIS Stations - Hourly Temp. °C\",\n  col=NA, col.regions=terrain.colors(100, alpha=.4), drape=T,\n  at=do.breaks(c(-5,35), 100)\n)\n\n\n\n\n\nCompared to hourly time-series at production sites from ERA5-LAND:\n\n\ncode\n\nwireframe(era~as.numeric(date)*time, data=dt.imp, \n  xlab=\"Date\", ylab=\"Hour\", zlab=\"°C\",  \n  sub=\"Production Sites - Hourly Temp. °C (ERA5-LAND)\",\n  col=NA, col.regions=terrain.colors(100, alpha=.4), drape=T,\n  at=do.breaks(c(-5,30), 100)\n)\n\n\n\n\n\nMean recalibration effect across production sites (after RFmerge):\n\n\ncode\n\nwireframe((value-era)~as.numeric(date)*time, data=dt.imp, \n  xlab=\"Date\", ylab=\"Hour\", zlab=\"°C\",  \n  sub=\"ERA5-LAND Mean Recalibration Effect\\nacross Production Sites\\nHourly Temp. °C\",\n  col=NA, col.regions=terrain.colors(100, alpha=.4), drape=T\n)\n\n\n\n\n\nFDD index across sites between Feb-01 and Mar-31, 2017 (before and after ground calibration):\n\n\ncode\ndt.imp[date %between% c(\"2017-02-01\", \"2017-03-31\"), .(\n  era = min(era, na.rm=T),\n  era_valid = min(era_valid, na.rm=T),\n  value = min(value, na.rm=T)\n), by=.(loc_id, date)][, .(\n  `FDD (before)` = sum(fifelse(era<0, pmax(era, -4, na.rm=T), 0), na.rm=T),\n  `FDD (validate)` = sum(fifelse(era_valid<0, pmax(era_valid, -4, na.rm=T), 0), na.rm=T),\n  `FDD (after)` = sum(fifelse(value<0, pmax(value, -4, na.rm=T), 0), na.rm=T)\n), keyby=.(loc_id)]%>%\n  paged_table()\n\n\n\n\n\n\nFDD across sites between Feb-01 and Mar-31, 2017\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by-nc/4.0/CitationBibTeX citation:@online{bacou2021,\n  author = {Melanie BACOU},\n  title = {Merge {Ground} and {Satellite} {Observations} with {RFMerge}},\n  date = {2021-01-16},\n  url = {https://mbacou.github.io/mb-labs/posts/2021-01-16-rfmerge},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nMelanie BACOU. 2021. “Merge Ground and Satellite Observations with\nRFMerge.” January 16, 2021. https://mbacou.github.io/mb-labs/posts/2021-01-16-rfmerge."
  },
  {
    "objectID": "posts/2020-12-02-era5-ca/index.html",
    "href": "posts/2020-12-02-era5-ca/index.html",
    "title": "ERA5-LAND Temperature Validation (California)",
    "section": "",
    "text": "Can we justify Y2017 correction to ERA5 grids over OLAM portfolio?\nPortfolio-wide ERA5-LAND temperature validation against NOAA GHCN ground records\n\n\n\ncode\n\nlibrary(knitr)\n## Error in fun(pkgname, pkgpath) : could not find function \"fun\"\n## Error in fun(pkgname, pkgpath) : could not find function \"fun\"\n## Error in fun(pkgname, pkgpath) : could not find function \"fun\"\n## Error in fun(pkgname, pkgpath) : could not find function \"fun\"\n## Error in fun(pkgname, pkgpath) : could not find function \"fun\"\n## Error in fun(pkgname, pkgpath) : could not find function \"fun\"\n## Error in fun(pkgname, pkgpath) : could not find function \"fun\"\n## Error in fun(pkgname, pkgpath) : could not find function \"fun\"\n## Error in fun(pkgname, pkgpath) : could not find function \"fun\"\n## Error in fun(pkgname, pkgpath) : could not find function \"fun\"\n## Error in fun(pkgname, pkgpath) : could not find function \"fun\"\nlibrary(lubridate)\n## \n## Attaching package: 'lubridate'\n## The following objects are masked from 'package:base':\n## \n##     date, intersect, setdiff, union\nlibrary(ggplot2)\nlibrary(raster)\n## Loading required package: sp\nlibrary(scales)\nlibrary(data.table)\n## \n## Attaching package: 'data.table'\n## The following object is masked from 'package:raster':\n## \n##     shift\n## The following objects are masked from 'package:lubridate':\n## \n##     hour, isoweek, mday, minute, month, quarter, second, wday, week, yday,\n##     year\nlibrary(zoo)\n## \n## Attaching package: 'zoo'\n## The following objects are masked from 'package:base':\n## \n##     as.Date, as.Date.numeric\nlibrary(rgdal)\n## Please note that rgdal will be retired by the end of 2023,\n## plan transition to sf/stars/terra functions using GDAL and PROJ\n## at your earliest convenience.\n## \n## rgdal: version: 1.5-29, (SVN revision 1165M)\n## Geospatial Data Abstraction Library extensions to R successfully loaded\n## Loaded GDAL runtime: GDAL 3.4.3, released 2022/04/22\n## Path to GDAL shared files: /usr/share/gdal\n## GDAL binary built with GEOS: TRUE \n## Loaded PROJ runtime: Rel. 8.2.0, November 1st, 2021, [PJ_VERSION: 820]\n## Path to PROJ shared files: /home/mbacou/.local/share/proj:/usr/share/proj\n## PROJ CDN enabled: FALSE\n## Linking to sp version:1.4-6\n## To mute warnings of possible GDAL/OSR exportToProj4() degradation,\n## use options(\"rgdal_show_exportToProj4_warnings\"=\"none\") before loading sp or rgdal.\nlibrary(rgeos)\n## Warning in fun(libname, pkgname): rgeos: versions of GEOS runtime 3.10.2-CAPI-1.16.0\n## and GEOS at installation 3.10.1-CAPI-1.16.0differ\n## rgeos version: 0.5-9, (SVN revision 684)\n##  GEOS runtime version: 3.10.2-CAPI-1.16.0 \n##  Please note that rgeos will be retired by the end of 2023,\n## plan transition to sf functions using GEOS at your earliest convenience.\n##  GEOS using OverlayNG\n##  Linking to sp version: 1.4-6 \n##  Polygon checking: TRUE\nlibrary(rnoaa)\n\ndir <- \".\"\nload(file.path(dir, \"./tmp/2020-burn_olam_usa_07.RData\"))\n\n\n\n\ncode\n# Clear workspace, keep portfolio details\nload(file.path(dir, \"./tmp/2020-burn_olam_usa_06.RData\"))\nrm(list=setdiff(ls(), c(\"dir\", \"pts.dt\", \"dt.era\", \"dt.imp\")))\n\npts <- SpatialPointsDataFrame(pts.dt[, .(X,Y)], data.frame(pts.dt), \n  proj4string=CRS(\"+init=epsg:4326\"))\n\n\n\n\ncode\n# Get GHCN ground obs across ZOI\nstations <- ghcnd_stations()\nsetDT(stations)\nvars <- c(\"PRCP\", \"TAVG\", \"TMAX\", \"TMIN\")\nstations[element %in% vars, .N, by=element]\nstations <- stations[state==\"CA\" & element %in% vars]\n\n# Convert to spatial\nstations.sp <- SpatialPointsDataFrame(stations[, .(longitude, latitude)], stations,\n  proj4string=CRS(\"+init=epsg:4326\"))\n\n# Keep only stations within 30 km of any OLAM site\npts <- spTransform(pts, CRS(\"+init=epsg:3310\"))\nstations.sp <- spTransform(stations.sp, CRS(\"+init=epsg:3310\"))\ndist <- rgeos::gWithinDistance(stations.sp, pts, dist=30*1000, byid=TRUE)\ndist <- colSums(dist)\nnames(dist) <- stations.sp$id\ndist <- dist[dist>0]\nids <- names(dist)\n\npts <- spTransform(pts, CRS(\"+init=epsg:4326\"))\nstations.sp <- spTransform(stations.sp, CRS(\"+init=epsg:4326\"))\n\nplot(extent(pts), lty=2, col=NA, xlab=NA, ylab=NA)\nplot(stations.sp[stations.sp$id %in% ids,], col=\"black\", add=T)\nplot(pts, col=\"blue\", pch=\"*\", add=T)\n\nids <- stations[id %in% ids & element %in% vars & last_year > 2009, unique(id)]\nstations[id %in% ids & element %in% vars]\n\n# Get daily station time-series for the 29 selected\n# Request seems to time out when too large so batch it\nstations.dt <- lapply(ids, function(x) \n  try(ghcnd_search(x, var=vars, date_min=\"2010-01-01\", refresh=T)))\nstations.dt <- stations.dt[sapply(stations.dt, function(x) class(x)!=\"try-error\")]\nstations.dt <- do.call(c, stations.dt)\nstations.dt <- lapply(stations.dt, function(x) setnames(x, 2, \"value\"))\nstations.dt <- rbindlist(stations.dt, idcol=\"var\")\n\nstations.dt[, .N, by=var]\npar(mfrow=c(2,2))\nfor(i in stations.dt[, unique(var)]) stations.dt[var==i, hist(value, main=i)]\npar(mfrow=c(1,1))\n\n# Convert tenths of degrees Celsius to °C\nstations.dt[, value := as.numeric(value)\n][var %in% tolower(vars[2:4]), value := value/10]\n\nids <- stations.dt[, unique(id)]\n\n\n\n\ncode\n# Extract ERA5 at stations' coordinates\nx <- c(\"2010-01-01\", \"2020-07-31\")\ncat <- wc_catalog(x, code=\"era5_temp_h_usa_ca\")\ndt <- wc_extract(\n  stations[id %in% ids, .N, by=.(loc_id=id, X=longitude, Y=latitude)][, N:=NULL], \n  catalog=cat)\n\n# Verify sequence\ndt[c(1, .N), .(date, time)]\ndt[, .N, by=.(y=year(date), loc_id)][N!=8760 & N!=8784 & N!=5112]\n# => OK\n\ndt[,\n  # Apply timezone\n  time := with_tz(as.POSIXct(paste(date, time, sep=\" \")), tzone=\"America/Los_Angeles\")\n][, `:=`(\n  # Convert to IDate\n  date = as.IDate(time),\n  time = as.ITime(time)\n)]\n\n# Verify\ndt[c(1, .N), .(date, time)]\ndt[, .N, by=loc_id][, uniqueN(N)]\ndt[, hist(value)]\ndt[, summary(value)]\n#   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n# -6.623  10.852  17.053  17.939  24.544  43.893  \n\n# Daily\ndt <- dt[, .(\n  Tmean = mean(value, na.rm=T),\n  Tmin = min(value, na.rm=T),\n  Tmax = max(value, na.rm=T)\n), keyby=.(loc_id, date)]\n\n# Combine with GHCN\ntmp <- dcast(stations.dt, id+date~var, value.var=\"value\")\ndt[tmp, on=.(loc_id=id, date=date), `:=`(\n  GHCN_Tmean = i.tavg,\n  GHCN_Tmin = i.tmin,\n  GHCN_Tmax = i.tmax\n)]\n\n\n\n\ncode\nrm(x, i, j, t, tmp)\nsave.image(file.path(dir, \"./tmp/2020-burn_olam_usa_07.RData\"))\n\n\n\nResults\n10-year comparisons between ERA5-LAND and GHCN station network over Feb-March risk period. 11 stations (under 30-km from production sites and with daily temperature records after 2010) are selected for the comparison.\n\n\ncode\nplot(cat[date==\"2020-02-01\", crop(raster(file, 1), stations.sp[stations.sp$id %in% ids,])], \n  xlab=NA, ylab=NA, main=\"Tmean °C\", sub=\"ERA5 2020-02-01 00:00\")\n## Loading required namespace: ncdf4\nplot(crop(stations.sp[!stations.sp$id %in% ids,], pts), col=\"black\", add=T)\nplot(stations.sp[stations.sp$id %in% ids,], col=\"red\", add=T)\nplot(pts, col=\"blue\", pch=\"*\", add=T)\nplot(pts[pts$loc_id==25,], col=\"blue\", pch=1, cex=2, add=T)\nlegend(\"bottomleft\", \n  legend=c(\"GHCN station\", \"GHCN station ≤ 30-km\", \"OLAM production site\", \"Main site\"),\n  col=c(\"black\", \"red\", \"blue\", \"blue\"), pch=c(\"+\", \"+\", \"*\", \"o\"), cex=.7)\n## Warning in (function (s, units = \"user\", cex = NULL, font = NULL, vfont = NULL, :\n## conversion failure on 'GHCN station ≤ 30-km' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in (function (s, units = \"user\", cex = NULL, font = NULL, vfont = NULL, :\n## conversion failure on 'GHCN station ≤ 30-km' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in (function (s, units = \"user\", cex = NULL, font = NULL, vfont = NULL, :\n## conversion failure on 'GHCN station ≤ 30-km' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in text.default(x, y, ...): conversion failure on 'GHCN station ≤ 30-km' in\n## 'mbcsToSbcs': dot substituted for <e2>\n## Warning in text.default(x, y, ...): conversion failure on 'GHCN station ≤ 30-km' in\n## 'mbcsToSbcs': dot substituted for <89>\n## Warning in text.default(x, y, ...): conversion failure on 'GHCN station ≤ 30-km' in\n## 'mbcsToSbcs': dot substituted for <a4>\n\n\n\n\n\nList of GHCN stations retained in the analysis.\n\n\ncode\n\nkable(stations[id %in% ids & element %in% c(\"TMIN\", \"TAVG\"), .(\n  first_year, last_year\n), keyby=.(id, name, element)]\n)\n\n\n\n\n\n\n\n\n\n\n\n\nid\nname\nelement\nfirst_year\nlast_year\n\n\n\n\nUSC00040444\nBAKERSFIELD 5 NW\nTMIN\n1999\n2020\n\n\nUSC00045233\nMADERA\nTMIN\n1928\n2020\n\n\nUSC00045532\nMERCED\nTMIN\n1899\n2020\n\n\nUSC00048122\nSHAFTER 6E\nTMIN\n2009\n2020\n\n\nUSC00048752\nTAFT\nTMIN\n1994\n2011\n\n\nUSR0000CCAT\nCATHEYS VALLEY CALIFORNIA\nTAVG\n1999\n2020\n\n\nUSR0000CCAT\nCATHEYS VALLEY CALIFORNIA\nTMIN\n1999\n2020\n\n\nUSR0000CGSP\nGREEN SPRING CALIFORNIA\nTAVG\n1990\n2020\n\n\nUSR0000CGSP\nGREEN SPRING CALIFORNIA\nTMIN\n1990\n2020\n\n\nUSW00023155\nBAKERSFIELD AP\nTAVG\n1998\n2020\n\n\nUSW00023155\nBAKERSFIELD AP\nTMIN\n1937\n2020\n\n\nUSW00023257\nMERCED MUNI AP\nTAVG\n1998\n2005\n\n\nUSW00023257\nMERCED MUNI AP\nTMIN\n1998\n2020\n\n\nUSW00023258\nMODESTO CITY CO AP\nTAVG\n1998\n2005\n\n\nUSW00023258\nMODESTO CITY CO AP\nTMIN\n1927\n2020\n\n\nUSW00093242\nMADERA MUNI AP\nTAVG\n1998\n2005\n\n\nUSW00093242\nMADERA MUNI AP\nTMIN\n1998\n2020\n\n\n\n\n\n10-year summary.\n\n\ncode\n\npar(mfrow=c(2,2))\nfor(i in stations.dt[, unique(var)]) stations.dt[var==i, hist(value, main=i)]\n\n\n\n\n\n\n\nTemperature Minima\n2010-2014\n\n\ncode\nprd <- c(\"2020-02-01\", \"2020-03-31\")\ndt[, sdate := as.Date(date)][, year := year(date)]\nyear(dt$sdate) <- 2020\n\ntmp <- dt[yday(date) %between% yday(prd), .(\n  Tmin = mean(Tmin, na.rm=T),\n  GHCN_Tmin = mean(GHCN_Tmin, na.rm=T),\n  diff_Tmean = mean(Tmean - GHCN_Tmean, na.rm=T),\n  diff_Tmin = mean(Tmin - GHCN_Tmin, na.rm=T)\n), by=.(year, date, sdate)\n][, sign := diff_Tmin > 0]\n\nggplot(tmp[year(date) %between% c(2010, 2014)], aes(x=sdate)) +\n  geom_line(aes(y=Tmin, color=\"ERA5 Tmin\")) + \n  geom_point(aes(y=Tmin, color=\"ERA5 Tmin\"), size=.5) +\n  geom_line(aes(y=GHCN_Tmin, color=\"GHCN Tmin\")) + \n  geom_point(aes(y=GHCN_Tmin, color=\"GHCN Tmin\"), size=.5) +\n  scale_x_date(date_labels=\"%b-%d\", breaks=\"2 days\") +\n  scale_color_discrete(NULL) +\n  facet_wrap(\"year\", ncol=1) +\n  xlab(NULL) +\n  ggtitle(\"Temperature Mean of Min -- ERA5 vs. GHCN (19 WS)\") +\n  theme(\n    legend.position=\"top\", legend.justification=0, \n    axis.text.x=element_text(angle=-90)\n  )\n\n\n\n\n\n2015-2020\n\n\ncode\nggplot(tmp[year(date) > 2014], aes(x=sdate)) +\n  geom_line(aes(y=Tmin, color=\"ERA5 Tmin\")) + \n  geom_point(aes(y=Tmin, color=\"ERA5 Tmin\"), size=.5) +\n  geom_line(aes(y=GHCN_Tmin, color=\"GHCN Tmin\")) + \n  geom_point(aes(y=GHCN_Tmin, color=\"GHCN Tmin\"), size=.5) +\n  scale_x_date(date_labels=\"%b-%d\", breaks=\"2 days\") +\n  scale_color_discrete(NULL) +\n  facet_wrap(\"year\", ncol=1) +\n  xlab(NULL) +\n  ggtitle(\"Temperature Mean of Min -- ERA5 vs. GHCN (19 WS)\") +\n  theme(\n    legend.position=\"top\", legend.justification=0, \n    axis.text.x=element_text(angle=-90)\n  )\n\n\n\n\n\n2010-2014\n\n\ncode\nggplot(tmp[year(date) %between% c(2010, 2014)], \n  aes(sdate, color=sign)) +\n  geom_segment(aes(xend=sdate, y=Tmin, yend=GHCN_Tmin), size=.8, lineend=\"butt\") +\n  geom_point(aes(y=GHCN_Tmin)) +\n  scale_x_date(date_labels=\"%b-%d\", breaks=\"3 day\") +\n  scale_color_discrete(NULL, labels=c(\"ERA5 ≤ GHCN\", \"ERA5 > GHCN\")) +\n  facet_wrap(\"year\", ncol=1) +\n  xlab(NULL) +\n  ggtitle(\"Temperature Mean of Min -- ERA5 vs. GHCN WS\") +\n  theme(\n    legend.position=\"top\", legend.justification=0, \n    axis.text.x=element_text(angle=-90)\n  )\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\n## conversion failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\n## conversion failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\n## conversion failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n\n\n\n\n\n2015-2020\n\n\ncode\nggplot(tmp[year(date) > 2014], \n  aes(sdate, color=sign)) +\n  geom_segment(aes(xend=sdate, y=Tmin, yend=GHCN_Tmin), size=.8, lineend=\"butt\") +\n  geom_point(aes(y=GHCN_Tmin)) +\n  scale_x_date(date_labels=\"%b-%d\", breaks=\"3 day\") +\n  scale_color_discrete(NULL, labels=c(\"ERA5 ≤ GHCN\", \"ERA5 > GHCN\")) +\n  facet_wrap(\"year\", ncol=1) +\n  xlab(NULL) +\n  ggtitle(\"Temperature Mean of Min -- ERA5 vs. GHCN WS\") +\n  theme(\n    legend.position=\"top\", legend.justification=0, \n    axis.text.x=element_text(angle=-90)\n  )\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : conversion\n## failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\n## conversion failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <e2>\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\n## conversion failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <89>\n## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\n## conversion failure on 'ERA5 ≤ GHCN' in 'mbcsToSbcs': dot substituted for <a4>\n\n\n\n\n\nDifferences between ERA5 Tmin and GHCN Tmin over risk period:\n\n\ncode\ndt[yday(date) %in% yday(prd), summary(Tmin - GHCN_Tmin)]\n##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n## -5.9080 -1.1880  0.2500  0.2953  1.5979  9.7133     206\n\n\nDifferences between ERA5 Tmin and GHCN Tmin over risk period (GHCN below 0°C):\n\n\ncode\ndt[yday(date) %in% yday(prd) & GHCN_Tmin <= 0, summary(Tmin - GHCN_Tmin)]\n##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##   1.364   1.822   2.350   2.058   2.350   2.405\n\n\nDifferences between ERA5 Tmean and GHCN Tmean over risk period:\n\n\ncode\ndt[yday(date) %in% yday(prd), summary(Tmean - GHCN_Tmean)]\n##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n## -4.5485 -1.7915 -1.1321 -0.9827 -0.1575  1.9854     359\n\n\nDifferences between ERA5 Tmax and GHCN Tmax over risk period:\n\n\ncode\ndt[yday(date) %in% yday(prd), summary(Tmax - GHCN_Tmax)]\n##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n## -4.6174 -1.4994 -0.6568 -0.6119  0.1649  4.7969     204\n\n\nCorrelation summary on temperature minima (all available dates):\n\n\ncode\ntmp <- dt[!is.na(GHCN_Tmin), .(cor = cor(GHCN_Tmin, Tmin, method=\"pearson\"))]\nsummary(tmp$cor)\n##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##  0.9258  0.9258  0.9258  0.9258  0.9258  0.9258\n\n\nCorrelation summary on temperature minima (GHCN below 0°C, all available dates):\n\n\ncode\ntmp <- dt[!is.na(GHCN_Tmin) & GHCN_Tmin <= 0, .(cor = cor(GHCN_Tmin, Tmin, method=\"pearson\"))]\nsummary(tmp$cor)\n##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##  0.2952  0.2952  0.2952  0.2952  0.2952  0.2952\n\n\nERA5 bias along GHCN ground temperatures:\n\n\ncode\n\ntmp <- dt[!is.na(GHCN_Tmin), .(\n  GHCN_Tmean, GHCN_Tmin, \n  Tmean_bias = GHCN_Tmean - Tmean,\n  Tmin_bias = GHCN_Tmin - Tmin\n)]\n\nggplot(tmp) +\n  geom_smooth(aes(x=GHCN_Tmean, y=Tmean_bias, color=\"Bias (Tmean)\")) +\n  geom_smooth(aes(x=GHCN_Tmin, y=Tmin_bias, color=\"Bias (Tmin)\")) +\n  geom_hline(aes(yintercept=0), color=\"black\", linetype=1) +\n  geom_vline(aes(xintercept=0), color=\"black\", linetype=3) +\n  scale_color_discrete(NULL) +\n  scale_x_continuous(n.breaks=10) +\n  scale_y_continuous(n.breaks=10) +\n  xlab(\"GHCN Temp. (°C)\") + ylab(\"ERA5 Bias (°C)\") +\n  ggtitle(\"ERA5 Bias vs. GHCN WS (2010-2020)\") +\n  theme(\n    legend.position=\"top\", legend.justification=0\n  )\n## `geom_smooth()` using method = 'gam' and formula 'y ~ s(x, bs = \"cs\")'\n## Warning: Removed 27289 rows containing non-finite values (stat_smooth).\n## `geom_smooth()` using method = 'gam' and formula 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\nFrost Index\n\n\ncode\n\ndegree_frost <- c(-4, 0)\n\n# Add daily index values\nsetorder(dt, loc_id, date)\nidx <- dt[yday(date) %between% yday(prd), .(\n  idx = sum(degree_frost[2] - pmin(\n    fifelse(Tmin < degree_frost[1], degree_frost[1], Tmin), degree_frost[2]), na.rm=T),\n  idx_ghcn = sum(degree_frost[2] - pmin(\n    fifelse(GHCN_Tmin < degree_frost[1], degree_frost[1], GHCN_Tmin), degree_frost[2]), na.rm=T)\n), by=.(loc_id, year)]\n\n\n\n\ncode\n\ntmp <- melt(idx, id.vars=c(\"loc_id\", \"year\"))\ntmp <- tmp[, .(value=mean(value, na.rm=T)), by=.(year, variable)]\n\nggplot(tmp[variable %in% c(\"idx\", \"idx_ghcn\")], \n  aes(year, value, fill=variable)) +\n  geom_col(position=\"dodge\", color=NA, alpha=.8, width=.8) +\n  scale_fill_discrete(NULL, labels=c(\"GHCN FDD\", \"ERA5 FDD\")) +\n  scale_x_continuous(breaks=2010:2020) +\n  xlab(NULL) + ylab(NULL) +\n  ggtitle(\"Mean FDD across Stations -- ERA5 vs. GHCN (2010-2020)\") +\n  theme(\n    axis.text.x=element_text(angle=-90),\n    legend.position=\"top\", legend.justification=0\n  )\n\n\n\n\n\n\n\ncode\n\nggplot(idx[idx_ghcn>0], aes(idx_ghcn, idx)) +\n  geom_abline(linetype=3) +\n  geom_smooth(aes(color=\"ERA5 non-adjusted\")) +\n  geom_point(shape=\"+\", size=4) +\n  scale_color_discrete(NULL) +\n  xlab(\"GHCN FDD\") + ylab(\"ERA5 FDD\") +\n  ggtitle(\"FDD -- ERA5 vs. GHCN (2010-2020)\") +\n  theme(\n    legend.position=\"top\", legend.justification=0\n  )\n## `geom_smooth()` using method = 'loess' and formula 'y ~ x'\n\n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by-nc/4.0/CitationBibTeX citation:@online{bacou2020,\n  author = {Melanie BACOU},\n  title = {ERA5-LAND {Temperature} {Validation} {(California)}},\n  date = {2020-12-02},\n  url = {https://mbacou.github.io/mb-labs/posts/2020-12-02-era5-ca},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nMelanie BACOU. 2020. “ERA5-LAND Temperature Validation\n(California).” December 2, 2020. https://mbacou.github.io/mb-labs/posts/2020-12-02-era5-ca."
  },
  {
    "objectID": "portfolio.html",
    "href": "portfolio.html",
    "title": "Portfolio",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Melanie Bacou",
    "section": "",
    "text": "Finley Malloc is the Chief Data Scientist at Wengo Analytics. When not innovating on data platforms, Finley enjoys spending time unicycling and playing with her pet iguana.\n\n\nUniversity of California, San Diego | San Diego, CA PhD in Mathematics | Sep 2011 - June 2015\nMacalester College | St. Paul MA B.A in Economics | Sep 2007 - June 2011\n\n\n\nWengo Analytics | Head Data Scientist | April 2018 - present\nGeoScynce | Chief Analyst | Spet 2012 - April 2018"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n \n\n\n\nU.S. Veteran Statistics\n\n\n\nrisk modeling\n\n\n\nExplore 10-year trends in U.S. military casulaties.\n\n\n\nMelanie BACOU\n\n\nDec 1, 2022\n\n\n\n\n\n12/4/22, 4:26:45 AM\n\n\n\n\n\n\n\n\n\n\n\n\n\nMerge Ground and Satellite Observations with RFMerge\n\n\n\nmeteo\n\n\nrisk modeling\n\n\n\nRecalibrate ERA5 hourly temperatures to CIMIS network ground observations.\n\n\n\nMelanie BACOU\n\n\nJan 16, 2021\n\n\n\n\n\n12/4/22, 4:19:36 AM\n\n\n\n\n\n\n\n\n\n\n\n\n\nERA5-LAND Temperature Validation (California)\n\n\n\nrisk modeling\n\n\n\nCan we justify winter Y2017 corrections to ERA5-LAND temperature grids over central California?\n\n\n\nMelanie BACOU\n\n\nDec 2, 2020\n\n\n\n\n\n12/4/22, 4:19:36 AM\n\n\n\n\n\n\n\nNo matching items"
  }
]