{
  "hash": "1fc823cccc6a63ba4ee62e0458fbd3f5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Merge Ground and Satellite Observations with RFMerge\nsubtitle: Recalibrate ERA5 hourly temperatures to CIMIS network ground observations.\ndate: 2021-01-16\ndate-modified: last-modified\ndraft: false\nfreeze: true\nfig-format: png\ncategories:\n  - meteo\n  - risk modeling\n---\n\n\n----------\n\nWhile estimating winter season frost risk for almond orchards over Central California, project partners reported significant discrepancies between modeled-based temperature estimates provided by ERA5-LAND reanalysis dataset and ground observations. These biases impact the calculation of daily **Frost-Degree-Day** index (FDD) used to price insurance coverage.\n\nHere we want to recalibrate [ERA5-LAND](https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-land) hourly temperatures to [CIMIS](https://cimis.water.ca.gov/) ground network observations in order to address ERA5-LAND model biases reported over Central California. The procedure involves the following steps:\n\n* Build CIMIS time-series across OLAM portfolio extent  \n* Build DEM covariate (using ERA5-LAND extent and spatial resolution)\n* Use RFMerge procedure[^1] to produce calibrated hourly raster stacks over the past 10 years (we limit this calibration from Jan-01 to Apr-30 every year)  \n\nThis work was initially performed for **WorldCover PBC** and **OLAM US** in early 2021, and redacted here to omit confidential details.\n\n[^1]: See Baez-Villanueva, O. M., Zambrano-Bigiarini, M., Diego, J., Osorio, G.-, & Mcnamara, I. (2020). *Tutorial for merging satellite-based precipitation datasets with ground observations using RFmerge*.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here)\nlibrary(lattice)\nlibrary(raster)\nlibrary(scales)\nlibrary(data.table)\nlibrary(zoo)\nlibrary(cimir)\nlibrary(sf)\nlibrary(RFmerge)\n\npal <- mblabs::pal\nmblabs::theme_labs_on()\n\nload(here(\"_data/2020-burn_olam_usa_06.RData\"))\n\nmy.settings <- list(\n  superpose.polygon=list(col=alpha(pal, .6), border=\"transparent\"),\n  strip.background=list(col=pal[\"light\"])\n)\n```\n:::\n\n\n\n# Covariate Layers\n\nDefine zone of interest and load covariate layers.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Clear workspace, keep portfolio details\nload(here(\"./tmp/2020-burn_olam_usa_04.RData\"))\nrm(list=setdiff(ls(), c(\"dir\", \"pts.dt\")))\n\npts <- SpatialPointsDataFrame(pts.dt[, .(X,Y)], data.frame(pts.dt), \n  proj4string=CRS(\"+init=epsg:4326\"))\n\nusa <- getData(\"GADM\", country=\"USA\", level=2)\n# Limit ZOI to OLAM counties\nusa <- usa[usa$NAME_2 %in% pts.dt[, unique(adm2_nm)],]\nzoi <- extent(usa)\nzoi\n# class      : Extent \n# xmin       : -121.4844 \n# xmax       : -117.6166 \n# ymin       : 34.7902 \n# ymax       : 38.07786 \n\n# Catalog hourly ERA5 tmean\nf <- list.files(\n  here(\"../maps/ERA5LAND/2m_temperature/hourly/usa.ca\"), \".nc\", \n  recursive=T, full.names=T)\n\n# Verify data archive\nn <- sapply(f, function(x) nlayers(brick(x, quick=T)))\nunique(n)\n# [1] 23 24  1 22\nbad <- f[names(n[n<24])]\nn <- sapply(f[bad], function(x) nlayers(brick(x, quick=T)))\ndata.table(\n  fname = basename(f[bad]),\n  nlayers = n)\n#                  fname nlayers\n# 1: daily_1981-01-01.nc      23\n# 2: daily_2020-08-01.nc       1\n# 3: daily_2020-10-01.nc      22\n# 4: daily_2020-10-02.nc      22\n# 5: daily_2020-10-03.nc      22\n# 6: daily_2020-10-15.nc      22\n\nN <- lapply(f[1:10], function(x) {\n  s = brick(x, quick=T)\n  s = setMinMax(s)\n  s = minValue(s) == maxValue(s)\n  which(s)\n})\nbad <- N[sapply(N, `!=`, integer(0))]\n```\n:::\n\n\nWe note that **6 days** on records do not include 24 hourly series.\n\nNext we obtain long-term weather station records from CIMIS API.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset_key(\"27ab5faa-abbb-475e-8af1-f380862bca61\")\nitem <- \"hly-air-tmp\"\n\n# Keep all CIMIS stations inside ZOI\nobs.gis <- cimis_station()\nsetDT(obs.gis)\nobs.gis[1:3, .(ConnectDate, DisconnectDate, HmsLatitude, HmsLongitude)]\n#    ConnectDate DisconnectDate           HmsLatitude              HmsLongitude\n# 1:    6/7/1982      9/25/1988 36º48'52N / 36.814444 -119º43'54W / -119.731670\n# 2:    6/7/1982      9/25/1988 36º48'52N / 36.814444 -119º43'54W / -119.731670\n# 3:    6/7/1982      9/25/1988 36º48'52N / 36.814444 -119º43'54W / -119.731670\n\nobs.gis[, `:=`(\n  # HMS Lat/Lon to degree\n  X = unlist(tstrsplit(HmsLongitude, \" / \", fixed=T, keep=2L)),\n  Y = unlist(tstrsplit(HmsLatitude, \" / \", fixed=T, keep=2L))\n)][, `:=`(\n  X = as.numeric(X),\n  Y = as.numeric(Y)\n)][, `:=`(\n  # Cast dates\n  date_start = as.Date(ConnectDate, format=\"%m/%d/%Y\"),\n  date_end = as.Date(DisconnectDate, format=\"%m/%d/%Y\")\n)]\n\nobs.gis[1:3, .(HmsLongitude, HmsLatitude, X, Y, date_start, date_end)]\nobs.gis <- obs.gis[, .(StationNbr, Name, X, Y, date_start, date_end, IsActive)]\n\n# There are duplicated stations (?)\nobs.gis <- unique(obs.gis, by=c(\"StationNbr\", \"X\", \"Y\", \"date_start\"))\nanyDuplicated(obs.gis, by=\"StationNbr\")\n\n# Date ranges that are available\nobs.gis[, .(range(date_start), range(date_end))]\n#            V1         V2\n# 1: 1982-05-30 1985-07-23\n# 2: 2020-10-28 2050-12-31\n\nobs.gis <- SpatialPointsDataFrame(obs.gis[, .(X, Y)], data.frame(obs.gis),\n  proj4string=CRS(\"+init=epsg:4326\"))\nobs.gis <- crop(obs.gis, zoi)\n\n# Plot maps\nplot(crop(raster(r, layer=2), zoi), main=basename(f[2]))\nplot(pts, add=T, pch=\"*\")\nplot(obs.gis, add=T, col=pal[c(\"red\", \"green\")][1+(obs.gis$IsActive==\"True\")], pch=\"x\")\n\nobs.lst <- obs.gis@data[, \"StationNbr\"]\nlength(obs.lst)\n\nobs.gis <- setDT(obs.gis@data)\n\n# API request limit at 1,750 records, so let's batch it\ndrange <- c(\"2017-01-01\", \"2017-04-30\")\nobs <- lapply(obs.lst, function(x) {\n  date_start = obs.gis[StationNbr==x, date_start]\n  date_end = obs.gis[StationNbr==x, date_end]\n  date_start = pmax(as.Date(drange[1]), date_start)\n  date_end = pmin(as.Date(drange[2]), date_end)\n  res = if(date_end >= date_start) {\n    s = seq.Date(date_start, date_end, by=\"10 days\")\n    lapply(s, function(y) {\n      t = try(cimis_data(\n        targets=as.integer(x), items=item, measure.unit=\"M\", start.date=y, end.date=y+10-1))\n      t = if(class(t)[1]==\"try-error\") NULL else setDT(t)\n      return(t)\n    })\n  } else NULL\n  return(res)\n})\n\nobs <- lapply(obs, rbindlist)\nnames(obs) <- obs.lst\nobs <- rbindlist(obs, fill=T, idcol=\"StationNbr\")\n\n# Clean up resulting dataset\nobs[, `:=`(\n  Name = NULL,\n  Type = NULL,\n  Owner = NULL,\n  Standard = NULL,\n  ZipCodes = NULL,\n  Item = NULL,\n  Qc = NULL,\n  Unit = NULL\n)]\n\n# Verify\nobs[StationNbr != Station, .N]\nobs[, .N, by=Scope]\nobs[, `:=`(\n  Station = NULL,\n  Scope = NULL\n)]\n\n# Tally ground observations\nobs[, .(.N, min(Date), max(Date)), keyby=.(StationNbr)]\n# => \"232\" station missing records 2160/2880\nobs[, .(.N, sum(is.na(Value)), min(Date), max(Date)), keyby=.(StationNbr)]\n24*(as.Date(drange[2])-as.Date(drange[1])+1)\n\n# Keep stations nearest to OLAM3 site portfolio\nids <- c(168, 206, 145, 188, 148)\nfwrite(obs[StationNbr %in% as.character(ids)], here(\"./out/CIMIA_OLAM3_2017.csv\"))\n```\n:::\n\n\nPrepare DEM over ERA5 extent.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Prepare DEM at ERA5 extent and resolution\ndem1 <- getData(\"SRTM\", lon=zoi[2], lat=zoi[3])\ndem2 <- getData(\"SRTM\", lon=zoi[1], lat=zoi[4])\ndem3 <- getData(\"SRTM\", lon=zoi[2], lat=zoi[4])\ndem4 <- getData(\"SRTM\", lon=zoi[1], lat=zoi[3])\ndem <- merge(dem1, dem2, dem3, dem4, ext=zoi)\n```\n:::\n\n\nConvert station time-series to `zoo` wide arrays.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Prep station time-series, require ZOO wide format\nobs[, Time := paste(as.character(Date), Hour)\n][, c(\"Date\", \"Time\") := IDateTime(\n  as.POSIXlt(Time, format=\"%Y-%m-%d %H%M\", tz=\"America/Los_Angeles\"))]\nView(obs[c(1:30, .N)])\n# 2017-01-01 2300 => 2017-01-01 23:00\n# 2017-01-01 2400 => 2017-01-02 00:00\n# => OK\nsetorder(obs, StationNbr, Date, Time)\nobs.ts <- dcast(obs, Date+Time~StationNbr, value.var=\"Value\")\nobs.ts <- zoo(\n  obs.ts[, .SD, .SDcols=-c(1:2)], \n  order.by=obs.ts[, as.POSIXlt(paste(Date, Time, tz=\"America/Los_Angeles\"))]\n)\n```\n:::\n\n\n# Recalibrate Hourly Temperature Estimates using Randon Forest\n\nImplement Random Forest merge algorithm.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Cut the series at Jan-Apr 2017 (time constraint)\ndrange <- c(\"2017-01-01\", \"2017-04-30\")\nx1 <- which(f %like% drange[1])\nx2 <- which(f %like% drange[2])\nf <- f[x1:x2]\nf[1]\n\n# Limit ERA5 covariate\nera <- brick(as.list(f))\nera <- crop(era, zoi, filename=here(\"./out/ERA5_2m_temperature_2017.grd\"), overwrite=T)\nera <- brick(here(\"./out/ERA5_2m_temperature_2017.grd\"))\n\n# Align DEM to ERA5\ndem <- resample(dem, era[[1]], filename=here(\"./out/SRTM_ERA5.grd\"))\nidentical(res(dem), res(era))\nidentical(extent(dem), extent(era))\nidentical(nlayers(era), nrow(obs.ts))\n\n# ZOI requires `sf`\nstations <- sf::st_as_sf(obs.gis, coords=c(\"X\", \"Y\"), crs=4326)\nzoi <- st_as_sfc(st_bbox(usa))\nzoi <- st_sf(data.frame(ID=1), geom=zoi)\n\n# Verify CRS\nidentical(st_crs(zoi), st_crs(era))\nidentical(st_crs(r), st_crs(era))\n\n# Reproject all to NAD_1983_California_Teale_Albers\nNAD83 <- CRS(\"+init=epsg:3310\")\nera <- projectRaster(from=era, crs=NAD83)\ndem <- projectRaster(from=dem, crs=NAD83)\nstations <- st_transform(stations, crs=3310)\npts <- spTransform(pts, CRS(\"+init=epsg:3310\"))\nzoi <- st_transform(zoi, crs=3310)\nobs.gis[, `:=`(\n  Lon = st_coordinates(stations)[, \"X\"],\n  Lat = st_coordinates(stations)[, \"Y\"]\n)]\n\n# Covariates\ncovariates <- list(era=era, dem=dem)\nobs.meta <- obs.gis[StationNbr %in% names(obs.ts), .(StationNbr, Lon, Lat)]\n\n# RFmerge\ndir.create(here(\"./out/2017_RFmerge_proj\"))\nmc.cores <- parallel::detectCores()-2\n\nrfmep <- RFmerge(\n  x = obs.ts, \n  metadata = obs.meta, \n  cov = covariates, \n  id=\"StationNbr\", lat=\"Lat\", lon=\"Lon\", ED=TRUE,\n  mask=zoi, training=0.9, write2disk=TRUE, drty.out=here(\"./out/2017_RFmerge_proj\"),\n  parallel=\"parallel\", par.nnodes=mc.cores)\n\nnames(rfmep)[c(1:2, nlayers(rfmep))]\n# [1] \"X2017.01.01.01.00.00\" \"X2017.01.01.02.00.00\" \"X2017.05.01.00.00.00\"\n\ncrs(rfmep)\n```\n:::\n\n\nExtract recalibrated time-series across almond production sites.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extract recalibrated time-series across production sites\nremoveTmpFiles(h=0)\ndt.imp <- extract(rfmep, pts)\ndt.imp = as.data.table(dt.imp, keep.rownames=TRUE)\ndt.imp[, loc_id := pts$loc_id]\ndt.imp = melt(dt.imp, id.vars=\"loc_id\", variable.name=\"time\", value.name=\"value\", variable.factor=F)\ndt.imp[, time := as.POSIXct(time, format=\"X%Y.%m.%d.%H.%M.%OS\", tz=\"America/Los_Angeles\")]\n\ndt.imp[, range(time)]\ndt.imp[, `:=`(\n  # Convert to IDate\n  date = as.IDate(time),\n  time = as.ITime(time)\n)]\n\n# Re-extract ERA5-LAND over period to double-check\nr <- brick(f[1], quick=T)\npts <- spTransform(pts, crs(r))\ndt.era <- lapply(f, function(x) {\n  r = brick(x, quick=T)\n  y = extract(r, pts)\n  y = as.data.table(y, keep.rownames=TRUE)\n  y[, loc_id := pts$loc_id]\n  y = melt(y, id.vars=\"loc_id\", variable.name=\"time\", value.name=\"value\", variable.factor=F)\n  y[, time := as.POSIXct(time, format=\"X%Y.%m.%d.%H.%M.%OS\", tz=\"UTC\")]\n})\ndt.era <- rbindlist(dt.era)\ndt.era[, range(time)]\ndt.era[, `:=`(\n  # Convert to IDate\n  date = as.IDate(time),\n  time = as.ITime(time)\n)]\n\n# Impute ERA5 hourly time-series with output of RFmerge\ndt <- readRDS(here(\"./tmp/2020-tmean-hourly_olam_ca_almd.rds\"))\ndt.imp[dt, on=.(loc_id, date, time), era := i.value\n][dt.era, on=.(loc_id, date, time), era_valid := i.value]\n\n# Save\ndt <- dt[!dt.imp, on=.(loc_id, date, time)]\ndt <- rbind(dt, dt.imp[, .SD, .SDcols=names(dt)])\nsetorder(dt, loc_id, date, time)\nsaveRDS(dt, here(\"./tmp/2020-tmean-hourly_olam_ca_almd_imputed.rds\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(x, i, j, t, tmp, dem1, dem2, dem3, dem4, n, x1, x2, dt, dtc)\nsave.image(here(\"./tmp/2020-burn_olam_usa_06.RData\"))\n```\n:::\n\n\n# Explore Results\n\nValidate ZOI, DEM, and ERA5 covariates.\n\n\n::: {.cell .column-screen layout-ncol=\"2\"}\n\n```{.r .cell-code}\n# Plot with package `terra` (instead of deprecated `raster`)\nlibrary(terra)\nera <- rast(here(\"./_out/ERA5_2m_temperature_2017.grd\"))\n\n# Align projections\npts <- vect(pts)\nstations <- vect(stations)\nzoi <- vect(zoi)\n\npts <- project(pts, \"epsg:4326\")\nstations <- project(stations, \"epsg:4326\")\nzoi <- project(zoi, \"epsg:4326\")\nera <- project(era[[1]], \"epsg:4326\")\ndem <- project(rast(dem), \"epsg:4326\")\nrfmep <- project(rast(rfmep[[1]]), \"epsg:4326\")\n\n# Validate ERA5 and DEM covariates\nplot(era, ext=zoi, ylab=names(era), col=terrain.colors(20),\n  main=\"ERA5-LAND Temperature (°C) on 2017-01-01 01:00\")\ngrid()\nplot(stations, add=T, pch=\"x\", col=pal[[\"dark\"]])\nplot(pts, add=T, pch=\"o\", col=pal[\"blue\"])\nplot(pts[pts$loc_id %in% c(25, 82, 83), ], add=T, col=pal[\"red\"], pch=\"o\")\nlegend(\"bottom\", ncol=3, bty=\"n\",\n  legend=c(\"CIMIS WS\", \"OLAM site\", \"Portfolio site\"),\n  col=pal[c(\"dark\", \"blue\", \"red\")], pch=c(\"x\", \"o\", \"o\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png)\n:::\n\n```{.r .cell-code}\nplot(dem, ext=zoi, ylab=names(dem), col=terrain.colors(20),\n  main=\"SRTM 90m (meter)\")\ngrid()\nplot(pts, add=T, pch=\"o\", col=pal[\"dark\"])\nplot(stations, add=T, col=pal[c(\"dark\", \"red\")][1+(obs.gis$IsActive==\"True\")], pch=\"x\")\nlegend(\"bottom\", ncol=3, bty=\"n\",\n  legend=c(\"Active station\", \"Stale station\", \"Production site\"),\n  col=pal[c(\"dark\", \"red\", \"dark\")], pch=c(\"x\", \"x\", \"o\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-2.png)\n:::\n:::\n\n\nCIMIS station observations between Jan-Apr 2017.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nobs[, .(\n  `Obs.` = comma(.N), \n  `NA` = percent(sum(is.na(Value))/.N), \n  `Min.` = min(Value, na.rm=T), \n  `Max.` = max(Value, na.rm=T),\n  `Date Range` = paste(range(Date, na.rm=T), collapse=\" - \")\n), keyby=.(StationNbr)] %>%\n  rmarkdown::paged_table()\n```\n\n::: {.cell-output-display}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"StationNbr\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Obs.\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"NA\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Min.\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Max.\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Date Range\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"105\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-1.6\",\"5\":\"30.9\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"113\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-0.9\",\"5\":\"31.1\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"114\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"0.3\",\"5\":\"29.6\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"124\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-2.2\",\"5\":\"28.3\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"125\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-0.7\",\"5\":\"30.7\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"126\",\"2\":\"2,880\",\"3\":\"5%\",\"4\":\"-2.1\",\"5\":\"29.3\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"142\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-1.4\",\"5\":\"34.9\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"143\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-2.1\",\"5\":\"29.3\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"146\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-1.0\",\"5\":\"31.2\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"148\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-4.0\",\"5\":\"28.4\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"15\",\"2\":\"2,880\",\"3\":\"1%\",\"4\":\"-0.9\",\"5\":\"30.2\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"160\",\"2\":\"2,880\",\"3\":\"38%\",\"4\":\"0.4\",\"5\":\"29.5\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"161\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"0.0\",\"5\":\"29.3\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"163\",\"2\":\"2,880\",\"3\":\"7%\",\"4\":\"-3.9\",\"5\":\"28.2\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"165\",\"2\":\"2,880\",\"3\":\"7%\",\"4\":\"-5.1\",\"5\":\"30.8\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"167\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-1.0\",\"5\":\"29.3\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"169\",\"2\":\"2,880\",\"3\":\"9%\",\"4\":\"-4.5\",\"5\":\"29.4\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"182\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-0.9\",\"5\":\"29.4\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"183\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-12.8\",\"5\":\"28.0\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"188\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-3.9\",\"5\":\"28.9\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"189\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-6.1\",\"5\":\"30.0\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"190\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-1.8\",\"5\":\"32.0\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"194\",\"2\":\"2,880\",\"3\":\"22%\",\"4\":\"-0.5\",\"5\":\"28.1\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"2\",\"2\":\"2,880\",\"3\":\"4%\",\"4\":\"-1.5\",\"5\":\"29.8\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"202\",\"2\":\"2,880\",\"3\":\"16%\",\"4\":\"0.8\",\"5\":\"28.9\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"203\",\"2\":\"2,880\",\"3\":\"2%\",\"4\":\"-13.0\",\"5\":\"30.6\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"205\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-0.4\",\"5\":\"29.4\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"206\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-1.8\",\"5\":\"28.5\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"21\",\"2\":\"2,880\",\"3\":\"55%\",\"4\":\"0.3\",\"5\":\"29.8\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"232\",\"2\":\"2,160\",\"3\":\"0%\",\"4\":\"0.5\",\"5\":\"28.3\",\"6\":\"2017-01-31 - 2017-05-01\"},{\"1\":\"248\",\"2\":\"2,880\",\"3\":\"12%\",\"4\":\"0.0\",\"5\":\"28.6\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"249\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-0.2\",\"5\":\"29.1\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"252\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"0.5\",\"5\":\"29.8\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"35\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-10.6\",\"5\":\"27.4\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"39\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-0.7\",\"5\":\"29.8\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"5\",\"2\":\"2,880\",\"3\":\"4%\",\"4\":\"-0.5\",\"5\":\"29.9\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"52\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"2.8\",\"5\":\"30.2\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"54\",\"2\":\"2,880\",\"3\":\"2%\",\"4\":\"-11.8\",\"5\":\"29.7\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"56\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-1.5\",\"5\":\"28.4\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"7\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-1.1\",\"5\":\"29.4\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"70\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-1.5\",\"5\":\"28.1\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"71\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-1.2\",\"5\":\"27.5\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"80\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-1.5\",\"5\":\"29.2\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"86\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-1.1\",\"5\":\"30.6\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"88\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-2.9\",\"5\":\"28.1\",\"6\":\"2017-01-01 - 2017-05-01\"},{\"1\":\"92\",\"2\":\"2,880\",\"3\":\"0%\",\"4\":\"-3.5\",\"5\":\"28.1\",\"6\":\"2017-01-01 - 2017-05-01\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n\nCIMIS Station Observations, Jan-Apr 2017\n:::\n:::\n\n::: {.cell .column-screen layout-ncol=\"2\"}\n\n```{.r .cell-code}\nplot(obs.ts[,1], col=alpha(pal[1], .7),\n  sub=paste(\"Station\", names(obs.ts)[1]), xlab=\"CIMIS Hourly Temp. °C\", ylab=NA)\ngrid()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png)\n:::\n\n```{.r .cell-code}\nplot(obs.ts[,20], col=alpha(pal[1], .7),\n  sub=paste(\"Station\", names(obs.ts)[20]), xlab=\"CIMIS Hourly Temp. °C\", ylab=NA)\ngrid()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-2.png)\n:::\n:::\n\n::: {.cell .column-screen layout-ncol=\"2\"}\n\n```{.r .cell-code}\nhistogram(~Value|StationNbr, data=obs, breaks=20,\n  col=alpha(pal[1], .6), border=pal[\"light\"], layout=c(2,6),\n  par.settings=my.settings,\n  xlab=\"Jan-Apr 2017 - CIMIS Hourly Temp. °C across meteo stations\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png)\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-2.png)\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-3.png)\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-4.png)\n:::\n:::\n\n::: {.cell .column-screen layout-ncol=\"2\"}\n\n```{.r .cell-code}\nplot(rfmep, ext=zoi, ylab=names(rfmep)[1], \n  col=terrain.colors(80), breaks=-8:11,\n  main=\"RF-MEP Temperatures °C\")\ngrid()\nplot(pts, pch=\"o\", col=pal[\"dark\"], add=T)\nplot(stations[stations$StationNbr %in% names(obs.ts),], \n  pch=\"x\", col=pal[[\"dark\"]], add=T)\nlegend(\"bottom\", ncol=2, bty=\"n\",\n  legend=c(\"Active station\", \"Production site\"), pch=c(\"x\", \"o\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png)\n:::\n\n```{.r .cell-code}\nplot(era, ext=zoi, ylab=names(era)[1], \n  col=terrain.colors(80), breaks=-8:11,\n  main=\"ERA5-LAND Temperatures °C\")\ngrid()\nplot(pts, pch=\"o\", col=pal[\"dark\"], add=T)\nplot(stations[stations$StationNbr %in% names(obs.ts),], \n  pch=\"x\", col=pal[[\"dark\"]], add=T)\nlegend(\"bottom\", ncol=2, bty=\"n\",\n  legend=c(\"Active station\", \"Production site\"), pch=c(\"x\", \"o\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-2.png)\n:::\n:::\n\n\nHourly time-series from nearest CIMIS ground stations compared to hourly time-series at production sites from ERA5-LAND.\n\n\n::: {.cell .column-screen layout-ncol=\"2\"}\n\n```{.r .cell-code}\nwireframe(Value~as.numeric(Date)*Time, data=obs, \n  xlab=\"Date\", ylab=\"Hour\", sub=\"Nearest CIMIS Stations - Hourly Temp. °C\",\n  col=NA, col.regions=terrain.colors(100, alpha=.4), drape=T,\n  at=do.breaks(c(-5,35), 100)\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png)\n:::\n\n```{.r .cell-code}\nwireframe(era~as.numeric(date)*time, data=dt.imp, \n  xlab=\"Date\", ylab=\"Hour\", zlab=\"°C\",  \n  sub=\"Production Sites - Hourly Temp. °C (ERA5-LAND)\",\n  col=NA, col.regions=terrain.colors(100, alpha=.4), drape=T,\n  at=do.breaks(c(-5,30), 100)\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-2.png)\n:::\n:::\n\n\nMean recalibration effect across production sites (after RFmerge procedure):\n\n\n::: {.cell .preview-image}\n\n```{.r .cell-code}\nwireframe((value-era)~as.numeric(date)*time, data=dt.imp, \n  xlab=\"Date\", ylab=\"Hour\", zlab=\"°C\",  \n  sub=\"ERA5-LAND Mean Recalibration Effect\\nacross Production Sites\\nHourly Temp. °C\",\n  col=NA, col.regions=terrain.colors(100, alpha=.4), drape=T\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png)\n:::\n:::\n\n\nFDD index across sites between Feb-01 and Mar-31, 2017 (before and after ground calibration):\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndt.imp[date %between% c(\"2017-02-01\", \"2017-03-31\"), .(\n  era = min(era, na.rm=T),\n  era_valid = min(era_valid, na.rm=T),\n  value = min(value, na.rm=T)\n), by=.(loc_id, date)][, .(\n  `FDD (before)` = sum(fifelse(era<0, pmax(era, -4, na.rm=T), 0), na.rm=T),\n  `FDD (validate)` = sum(fifelse(era_valid<0, pmax(era_valid, -4, na.rm=T), 0), na.rm=T),\n  `FDD (after)` = sum(fifelse(value<0, pmax(value, -4, na.rm=T), 0), na.rm=T)\n), keyby=.(loc_id)]%>%\n  rmarkdown::paged_table()\n```\n\n::: {.cell-output-display}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"loc_id\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"FDD (before)\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"FDD (validate)\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"FDD (after)\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-2.1666767\"},{\"1\":\"2\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-2.1666767\"},{\"1\":\"3\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-2.1666767\"},{\"1\":\"4\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-2.1666767\"},{\"1\":\"5\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-2.1666767\"},{\"1\":\"6\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-3.4761350\"},{\"1\":\"7\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-3.4761350\"},{\"1\":\"8\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-3.4761350\"},{\"1\":\"9\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-3.4761350\"},{\"1\":\"10\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-3.4761350\"},{\"1\":\"11\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-3.4761350\"},{\"1\":\"12\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-3.4761350\"},{\"1\":\"13\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-3.4761350\"},{\"1\":\"14\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-3.4761350\"},{\"1\":\"15\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-3.4761350\"},{\"1\":\"16\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-3.4761350\"},{\"1\":\"17\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-3.4761350\"},{\"1\":\"18\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-3.4761350\"},{\"1\":\"19\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-3.4761350\"},{\"1\":\"20\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-3.4761350\"},{\"1\":\"21\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-3.4761350\"},{\"1\":\"22\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-3.4761350\"},{\"1\":\"23\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-3.4761350\"},{\"1\":\"24\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-3.4761350\"},{\"1\":\"25\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.7498333\"},{\"1\":\"26\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5087167\"},{\"1\":\"27\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5087167\"},{\"1\":\"28\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5087167\"},{\"1\":\"29\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5087167\"},{\"1\":\"30\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.3167700\"},{\"1\":\"31\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.3167700\"},{\"1\":\"32\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.3167700\"},{\"1\":\"33\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.3167700\"},{\"1\":\"34\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5087167\"},{\"1\":\"35\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5087167\"},{\"1\":\"36\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.3167700\"},{\"1\":\"37\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.3167700\"},{\"1\":\"38\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.3167700\"},{\"1\":\"39\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.9189067\"},{\"1\":\"40\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.9189067\"},{\"1\":\"41\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.9189067\"},{\"1\":\"42\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.9189067\"},{\"1\":\"43\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.9189067\"},{\"1\":\"44\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.9189067\"},{\"1\":\"45\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.9189067\"},{\"1\":\"46\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.9189067\"},{\"1\":\"47\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.9189067\"},{\"1\":\"48\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.9189067\"},{\"1\":\"49\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.9189067\"},{\"1\":\"50\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.9189067\"},{\"1\":\"51\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-1.0882958\"},{\"1\":\"52\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.9189067\"},{\"1\":\"53\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.6372300\"},{\"1\":\"54\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.9189067\"},{\"1\":\"55\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.9189067\"},{\"1\":\"56\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.9189067\"},{\"1\":\"57\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.9189067\"},{\"1\":\"58\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.9189067\"},{\"1\":\"59\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.9189067\"},{\"1\":\"60\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.9189067\"},{\"1\":\"61\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.6372300\"},{\"1\":\"62\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.6372300\"},{\"1\":\"63\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.6372300\"},{\"1\":\"64\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.6372300\"},{\"1\":\"65\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.6372300\"},{\"1\":\"66\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.6372300\"},{\"1\":\"67\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.6372300\"},{\"1\":\"68\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.6372300\"},{\"1\":\"69\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.9189067\"},{\"1\":\"70\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-1.0882958\"},{\"1\":\"71\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"72\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"73\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"74\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"75\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"76\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"77\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"78\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-2.9816700\"},{\"1\":\"79\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-2.9816700\"},{\"1\":\"80\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-2.9816700\"},{\"1\":\"81\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-2.9816700\"},{\"1\":\"82\",\"2\":\"-0.0002197266\",\"3\":\"-0.0002197266\",\"4\":\"-3.7889842\"},{\"1\":\"83\",\"2\":\"-0.0002197266\",\"3\":\"-0.0002197266\",\"4\":\"-3.7889842\"},{\"1\":\"84\",\"2\":\"-0.2233642638\",\"3\":\"-0.2233642638\",\"4\":\"-3.3181283\"},{\"1\":\"85\",\"2\":\"-0.2233642638\",\"3\":\"-0.2233642638\",\"4\":\"-3.3181283\"},{\"1\":\"86\",\"2\":\"-0.2233642638\",\"3\":\"-0.2233642638\",\"4\":\"-3.3181283\"},{\"1\":\"87\",\"2\":\"-0.2233642638\",\"3\":\"-0.2233642638\",\"4\":\"-3.3181283\"},{\"1\":\"88\",\"2\":\"-0.2233642638\",\"3\":\"-0.2233642638\",\"4\":\"-3.3181283\"},{\"1\":\"89\",\"2\":\"-0.2233642638\",\"3\":\"-0.2233642638\",\"4\":\"-3.3181283\"},{\"1\":\"90\",\"2\":\"-0.2233642638\",\"3\":\"-0.2233642638\",\"4\":\"-3.3181283\"},{\"1\":\"91\",\"2\":\"-0.2233642638\",\"3\":\"-0.2233642638\",\"4\":\"-3.3181283\"},{\"1\":\"92\",\"2\":\"-0.2233642638\",\"3\":\"-0.2233642638\",\"4\":\"-3.3181283\"},{\"1\":\"93\",\"2\":\"-0.2233642638\",\"3\":\"-0.2233642638\",\"4\":\"-3.3181283\"},{\"1\":\"94\",\"2\":\"-0.2233642638\",\"3\":\"-0.2233642638\",\"4\":\"-3.3181283\"},{\"1\":\"95\",\"2\":\"-0.2233642638\",\"3\":\"-0.2233642638\",\"4\":\"-3.3181283\"},{\"1\":\"96\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"97\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"98\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"99\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"100\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"101\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"102\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"103\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"104\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"105\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"106\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"107\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"108\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"109\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"110\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"111\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"112\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"113\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"114\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"115\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"116\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"117\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"118\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"119\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"120\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"121\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"122\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"123\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"124\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"125\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"126\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"127\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"128\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"129\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"130\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"131\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"132\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"133\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"134\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"135\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"136\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"137\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"138\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"139\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"140\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"141\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"},{\"1\":\"142\",\"2\":\"0.0000000000\",\"3\":\"0.0000000000\",\"4\":\"-0.5150467\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n\nFDD across sites between Feb-01 and Mar-31, 2017\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}